kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-deployment
spec:
  selector:
    matchLabels:
      app: my-app
  replicas: 2
  template:
    metadata:
      labels:
        app: "my-app"
    spec:
      containers:
        - name: my-app
          image: "brunomeloesilva/my-app:latest"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            failureThreshold: 1
            timeoutSeconds: 1
            successThreshold: 1

# cd /home/bs/Documents/java-projects/purchase-order
# docker build -t brunomeloesilva/my-app:latest .
# docker login -u brunomeloesilva
# docker push brunomeloesilva/my-app
# docker logout
# cd /home/bs/Documents/java-projects/purchase-order/k8s
# kubectl apply -f 02-deployment.yaml
# kubectl get deployments
# kubectl get replicasets
# kubectl get pods
# kubectl describe deployment my-deployment
# kubectl describe pod my-deployment-6f888f5b5d-s4sld

# Obs.:
# - Se mudar o metadata.name e der apply novamente, vc fica com 2 deploys no ar